class(age)
age <- dmy_hms("15-02-2023 14:35:02") - datetime
dmy_hms("15-02-2023 14:25:02")
datetime
age
class(age)
age <- dmy_hms("15-02-2023 19:35:02") - datetime
dmy_hms("15-02-2023 14:25:02")
datetime
age
class(age)
as.duration(age)
as.duration(age)
as.numeric(as.duration(age))
rm(list = ls())
unique(counties$)
library(tidyverse)
counties <- readRDS("data/counties.rds")
unique(counties$state)
length(unique(counties$state))
View(counties)
vect1 <- c(10, 75, 42, 36)
x <- c("R", "python", "spss")
s <- c(TRUE, FALSE, TRUE)
vect1; x; s
library(tidyverse)
?geom_bar
library(tidyverse)
## Visualisation -----------------------------
library(questionr)
library(tidyverse)
data(rp2018)
rp <- filter(
rp2018,
departement %in% c("Oise", "Rhône", "Hauts-de-Seine", "Lozère", "Bouches-du-Rhône")
)
ggplot(rp) + geom_bar(aes(x = departement))
names(rp)
ggplot(rp) +
geom_bar(aes(x = region))
ggplot(rp) +
geom_bar(aes(x = region))
rp %>%
group_by(region) %>%
summarise(n = n())
rp %>%
group_by(region) %>%
summarise(n = n(),
pct = n / sum(n))
rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = n / sum(n))
rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = n / sum(n) * 100)
rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = round(n / sum(n) * 100, 2))
rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = round(n / sum(n) * 100, 2)) %>%
# graphique
ggplot() +
geom_col(aes(x = region, y = pct))
View(rp)
ggplot(rp) +
geom_point(aes(x = pop_femmes, y = pop_agr))
View(rp)
ggplot(rp) +
geom_point(aes(x = pop_femmes, y = pop_agric))
View(rp)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = cadres))
View(rp)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr))
ggplot(rp) +
geom_text(aes(x = dipl_sup, y = ouvr, label = commune))
View(rp)
ggplot(rp) +
geom_text(aes(x = dipl_sup, y = ouvr, label = commune))
ggplot(rp) +
geom_text(aes(x = dipl_sup, y = ouvr, label = commune))
rp %>%
group_by(region) %>%
summarise(n = n())
rp %>%
group_by(departement) %>%
summarise(n = n())
library(questionr)
data(rp2018)
rp <- filter(
rp2018,
departement %in% c("Oise", "Rhône", "Hauts-de-Seine", "Bouches-du-Rhône")
)
ggplot(data = rp) +
geom_bar(aes(x = departement))
ggplot(rp) +
geom_histogram(aes(x = cadres))
rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = round(n / sum(n) * 100, 2)) %>%
# graphique
ggplot() +
geom_col(aes(x = region, y = pct))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr))
ggplot(rp) +
geom_text(aes(x = dipl_sup, y = ouvr, label = commune))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 2, color = "darkgreen")
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 1, color = "darkgreen")
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 2, color = "darkgreen")
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 5, color = "darkgreen")
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen")
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen", shape = 14)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen", shape = 10)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen", shape = 16)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen", shape = 17)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen")
ggplot(rp) + geom_label(aes(x = dipl_sup, y = cadres, label = commune))
ggplot(rp) +
geom_label(aes(x = dipl_sup, y = ouvr, label = commune))
ggplot(rp) +
geom_label(aes(x = dipl_sup, y = ouvr, label = commune))
data("economics")
head(economics)
ggplot(economics) + geom_line(aes(x = date, y = unemploy))
?economics
data("economics")
head(economics)
ggplot(economics) + geom_line(aes(x = date, y = unemploy))
data("economics")
head(economics)
ggplot(economics) + geom_line(aes(x = date, y = psavert))
data("economics")
head(economics)
ggplot(economics) + geom_line(aes(x = date, y = psavert))
ggplot(rp) +
geom_histogram(aes(x = cadres), bins = 15)
ggplot(rp) +
geom_histogram(aes(x = cadres), bins = 15, color = "blue")
ggplot(rp) +
geom_histogram(aes(x = cadres), bins = 15, fill = "blue")
ggplot(rp) +
geom_histogram(aes(x = cadres), bins = 15, fill = "cornflowerblue")
ggplot(rp) +
geom_histogram(aes(x = cadres), bins = 15, fill = "cornflowerblue", color = "white")
ggplot(rp) +
geom_histogram(aes(x = cadres), bins = 15, fill = "cornflowerblue")
ggplot(rp) +
geom_boxplot(
aes(x = departement, y = maison),
fill = "wheat", color = "tomato4"
)
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat")
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat")
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat", color = "dark")
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat", color = "darkred")
ggplot(rp) +
geom_boxplot(aes(x = departement, y = maison), varwidth = TRUE)
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat", color = "darkred", varwidth = T)
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat", color = "darkred", varwidth = T)
ggplot(rp) +
geom_bar(aes(x = region), width = .4)
ggplot(rp) +
geom_bar(aes(x = region), width = .2)
ggplot(rp) +
geom_bar(aes(x = region), width = .1)
ggplot(rp) +
geom_bar(aes(x = region), width = .05)
ggplot(rp) +
geom_bar(aes(x = region), width = .03)
ggplot(rp) +
geom_bar(aes(x = region), width = .015)
ggplot(rp) +
geom_bar(aes(x = region), width = 5)
ggplot(rp) +
geom_bar(aes(x = region), width = 2)
ggplot(rp) +
geom_bar(aes(x = region), width = 1)
ggplot(rp) +
geom_bar(aes(x = region), width = 0.2)
ggplot(rp) +
geom_bar(aes(x = region))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen")
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr), size = 3, color = "darkgreen", alpha = 0.5)
rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = round(n / sum(n), 2)) %>%
# graphique
ggplot() +
geom_col(aes(x = region, y = pct))
ggplot(rp) + geom_bar(aes(x = departement, fill = pop_cl))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement)) +
scale_color_discrete("Département")
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement))
data("economics")
head(economics)
ggplot(economics) + geom_line(aes(x = date, y = psavert))
range(economics$date)
data("economics")
head(economics)
ggplot(economics) +
geom_line(aes(x = date, y = psavert)) +
ggtitle("Evolution du taux d'épargne personnel aux Etats-Unis de 1967 à 2015") +
xlab("Année") +
ylab("Taux d'épargne personnel")
View(rp)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = pop_tot))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = cadres), size = 3)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = cadres, size = pop_tot))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = cadres, size = pop_tot * 10))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = cadres, size = pop_tot * 100))
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = cadres, size = pop_tot))
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = departement), show.legend = F)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = departement, position = "fill"), show.legend = F)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = departement, position = "fill"), show.legend = T)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = region, position = "fill"), show.legend = T)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = region, position = "dodge"), show.legend = T)
View(rp)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = pop_cl, position = "dodge"), show.legend = T)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = pop_cl, position = "fill"), show.legend = T)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = pop_cl, position = "dodge"), show.legend = T)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = pop_cl, position = "fill"), show.legend = T)
ggplot(data = rp) +
geom_bar(aes(x = departement, fill = departement), show.legend = F)
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat", color = "darkred")
rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = round(n / sum(n), 2)) %>%
# graphique
ggplot() +
geom_col(aes(x = region, y = pct))
ggplot(rp) +
geom_boxplot(aes(x = region, y = cadres), fill = "wheat", color = "darkred") +
coord_flip()
plt1 <- rp %>%
group_by(region) %>%
summarise(n = n()) %>%
mutate(pct = round(n / sum(n), 2))
plt1 %>%
ggplot() +
geom_col(aes(x = region, y = pct)) +
coord_flip()
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplot(rp) +
geom_point(aes(x = dipl_sup, y = ouvr, color = departement, size = chom), alpha = 0.5)
ggplotly(p1)
?leaflet::addMarkers
personnes <- tibble(
nom = c("Sylvie", "Sylvie", "Monique", "Gunter", "Rayan", "Rayan"),
voiture = c("Twingo", "Ferrari", "Scenic", "Lada", "Twingo", "Clio")
)
library(lubridate)
library(nycflights13)
flights %>%
select(year, month, day, hour, minute)
library(tidyverse)
library(tibble)
personnes <- tibble(
nom = c("Sylvie", "Sylvie", "Monique", "Gunter", "Rayan", "Rayan"),
voiture = c("Twingo", "Ferrari", "Scenic", "Lada", "Twingo", "Clio")
)
voitures <- tibble(
voiture = c("Twingo", "Ferrari", "Clio", "Lada", "208"),
vitesse = c("140", "280", "160", "85", "160")
)
personnes
voitures
library(lubridate)
library(nycflights13)
library(tidyverse)
flights %>%
select(year, month, day, hour, minute)
setwd("D:/junior")
ls()
dir()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(flexdashboard)
library(tidyverse)
library(questionr)
library(plotly)
library(DT)
library(leaflet)
df <-  read.csv("Base_Femme_cesarise.csv", sep = ";")
df$Sexe<-factor(df$Sexe)
df$Etude<-factor(df$Etude)
View(df)
str(df)
df <-  read.csv("Base_Femme_cesarise.csv", sep = ";")
df$Sexe<-factor(df$Sexe)
df$Etude<-factor(df$Etude)
df$Taille <- as.numeric(df$Taille)
ggplot(data=df)+
geom_histogram(aes(x=Taille)) +
theme_classic()
library(tidyverse)
ggplot(data = df)+
geom_boxplot(aes(x=Etude, y=Taille,fill=Etude))+
theme_classic() +
theme(legend.position = "none",
axis.title = element_text(size = 20),
axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 45))
duplicated(df[, - 4])
(df <- data.frame(Prenom   = c(rep('Jean',3), rep("Alain", 2)),
Activite = c(rep('Foot',3), rep("Danse", 2)),
Lieu     = c(rep('Kinshasa',3), rep("Goma", 2)),
Date     = as.Date(c("2023-05-12", "2023-05-16", "2023-05-14", "2023-05-13", "2023-05-13"))
)
)
duplicated(df[, - 4])
which(duplicated(df[, - 4]))
dup <- which(duplicated(df[, - 4]))
df[dup, ]
dup <- which(duplicated(df[, - 4]))
df[-dup, ]
library(dplyr)
df %>%
distinct(Prenom, Activite, Lieu, .keep_all = T)
# Grouper et Trier par ordre croissant
df_cr <- df %>%
group_by(Prenom, Activite, Lieu) %>%
arrange(Date)
df_cr %>%
distinct(Prenom, Activite, Lieu, .keep_all = T)
# Grouper et Trier par ordre croissant
df_cr <- df %>%
group_by(Prenom, Activite, Lieu) %>%
arrange(Date)
df_cr %>%
distinct(Prenom, Activite, Lieu, .keep_all = T)
# Grouper et Trier par ordre décroissant
df_dec <- df %>%
group_by(Prenom, Activite, Lieu) %>%
arrange(desc(Date))
df_dec %>%
distinct(Prenom, Activite, Lieu, .keep_all = T)
df_dec %>%
slice(1)
(df <- data.frame(
Prenom   = c(rep('Jean',3), rep("Alain", 2)),
Activite = c(rep('Foot',3), rep("Danse", 2)),
Lieu     = c(rep('Kinshasa',3), rep("Goma", 2)),
Date     = as.Date(c("2023-05-12", "2023-05-16", "2023-05-14", "2023-05-13", "2023-05-13"))
))
df
df
df[, -4]
df[duplicated(df[, -4]), ]
df[duplicated(df[, -4]), ]
df[- duplicated(df[, -4]), ]
df[- duplicated(df), ]
df[duplicated(df[, -4]), ]
which(duplicated(df[, -4]))
- which(duplicated(df[, -4]))
-dup <- which(duplicated(df[, -4]))
dup <- which(duplicated(df[, -4]))
df[dup, ]
df[- dup, ]
df
(df <- data.frame(
Prenom   = c(rep('Jean',3), rep("Alain", 2)),
Activite = c(rep('Foot',3), rep("Danse", 2)),
Lieu     = c(rep('Kinshasa',3), rep("Goma", 2)),
Date     = as.Date(c("2023-05-12", "2023-05-16", "2023-05-14", "2023-05-13", "2023-05-12"))
))
df
df[, -4]
df[duplicated(df[, -4]), ]
dup <- which(duplicated(df[, -4]))
df[dup, ]
df[- dup, ]
df
(df <- data.frame(
Prenom   = c(rep('Jean',3), rep("Alain", 2)),
Activite = c(rep('Foot',3), rep("Danse", 2)),
Lieu     = c(rep('Kinshasa',3), rep("Goma", 2)),
Date     = as.Date(c("2023-05-12", "2023-05-16", "2023-05-14", "2023-05-17", "2023-05-12"))
))
dup <- which(duplicated(df[, -4]))
df[dup, ]
df[- dup, ]
library(dplyr)
df %>%
group_by(Prenom, Activite, Lieu) %>%
arrange(Date) %>%
distinct(Prenom, Activite, Lieu, .keep_all = T)
df %>%
group_by(Prenom, Activite, Lieu) %>%
arrange(desc(Date)) %>%
distinct(Prenom, Activite, Lieu, .keep_all = T)
library(tidyverse)
summary(iris)
iris %>% summary()
today()
now()
library(lubridate)
now()
today()
6*23
3*23
library(readxl)
df <- read_excel("data/urbanpop.xls", sheet = 1)
df
df %>%
pivot_longer(cols = names(df)[-1], names_to = "year", values_to = "pop")
library(tidyverse)
counties <- readRDS("data/counties.rds")
counties %>%
mutate(population_group = ifelse(population > 25000, ">25000", "<=25000")) %>%
select(population, population_group)
counties %>%
select(income) %>%
mutate(
income_cat = cut(
income,
breaks = c(17000, 40000, 46000, 50000, 150000),
labels = c("17000-40000", "40001-46000", "46001-50000", ">50000")
))
library(tidyr)
library(readxl)
df <- read_excel("data/urbanpop.xls", sheet = 1)
df
df %>%
pivot_longer(cols = names(df)[-1], names_to = "year", values_to = "pop")
connexion <- dbConnect(SQLite(), dbname = "data/db.sqlite")
connexion <- dbConnect(SQLite(), dbname = "data/db.sqlite")
library(DBI)
library(RSQLite)
connexion <- DBI::dbConnect(RSQLite::SQLite(), dbname = "data/db.sqlite")
dbWriteTable(connexion, "iris_info", iris)
connexion <- dbConnect(SQLite(), dbname = "data/db.sqlite")
library(readxl)
df <- read_excel("data/urbanpop.xls", sheet = 1)
df
df %>%
pivot_longer(cols = names(df)[-1], names_to = "year", values_to = "pop")
df_long <- df %>%
pivot_longer(cols = c(`2002`, `2007`), names_to = "year", values_to = "population")
