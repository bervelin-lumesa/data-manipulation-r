{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2
    ],
    "data": [
        "> ",
        "counties %>% ",
        "+ ",
        "  mutate(population_group = ifelse(population > 25000, \">25000\", \"<=25000\")) %>% ",
        "+ ",
        "  select(population, population_group)",
        "> ",
        "counties %>% ",
        "+ ",
        "  select(income) %>% ",
        "+ ",
        "  mutate(",
        "+ ",
        "    income_cat = cut(",
        "+ ",
        "      income,",
        "+ ",
        "      breaks = c(17000, 40000, 46000, 50000, 150000),",
        "+ ",
        "      labels = c(\"17000-40000\", \"40001-46000\", \"46001-50000\", \">50000\")",
        "+ ",
        "  ))",
        "> ",
        "library(tidyr)",
        "> ",
        "library(readxl)",
        "> ",
        "",
        "> ",
        "df <- read_excel(\"data/urbanpop.xls\", sheet = 1)",
        "> ",
        "df",
        "> ",
        "",
        "> ",
        "df %>% ",
        "+ ",
        "pivot_longer(cols = names(df)[-1], names_to = \"year\", values_to = \"pop\")",
        "> ",
        "",
        "> ",
        "connexion <- dbConnect(SQLite(), dbname = \"data/db.sqlite\")",
        "Error in dbConnect(SQLite(), dbname = \"data/db.sqlite\") : \n  could not find function \"dbConnect\"\n",
        "> ",
        "connexion <- dbConnect(SQLite(), dbname = \"data/db.sqlite\")",
        "Error in dbConnect(SQLite(), dbname = \"data/db.sqlite\") : \n  could not find function \"dbConnect\"\n",
        "> ",
        "library(DBI)",
        "> ",
        "library(RSQLite)",
        "> ",
        "connexion <- DBI::dbConnect(RSQLite::SQLite(), dbname = \"data/db.sqlite\")",
        "> ",
        "dbWriteTable(connexion, \"iris_info\", iris)",
        "Error: Table iris_info exists in database, and both overwrite and append are FALSE\n",
        "> ",
        "connexion <- dbConnect(SQLite(), dbname = \"data/db.sqlite\")",
        "> ",
        "library(readxl)",
        "> ",
        "",
        "> ",
        "df <- read_excel(\"data/urbanpop.xls\", sheet = 1)",
        "> ",
        "df",
        "> ",
        "",
        "> ",
        "df %>% ",
        "+ ",
        "pivot_longer(cols = names(df)[-1], names_to = \"year\", values_to = \"pop\")",
        "> ",
        "",
        "> ",
        "df_long <- df %>%",
        "+ ",
        "  pivot_longer(cols = c(`2002`, `2007`), names_to = \"year\", values_to = \"population\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `chr_as_locations()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns that don't exist.\n\u001B[31mâœ–\u001B[39m Column `2002` doesn't exist.\nBacktrace:\n\u001B[90m  1. \u001B[39mdf %>% ...\n\u001B[90m  3. \u001B[39m\u001B[1mtidyr\u001B[22m:::pivot_longer.data.frame(...)\n\u001B[90m  4. \u001B[39mtidyr::build_longer_spec(...)\n\u001B[90m  5. \u001B[39m\u001B[1mtidyselect\u001B[22m::eval_select(enquo(cols), data[unique(names(data))])\n\u001B[90m  6. \u001B[39mtidyselect:::eval_select_impl(...)\n     ...\n\u001B[90m 18. \u001B[39mtidyselect:::reduce_sels(node, data_mask, context_mask, init = init)\n\u001B[90m 19. \u001B[39mtidyselect:::walk_data_tree(new, data_mask, context_mask)\n\u001B[90m 20. \u001B[39mtidyselect:::as_indices_sel_impl(...)\n\u001B[90m 21. \u001B[39mtidyselect:::as_indices_impl(x, vars, call = call, strict = strict)\n\u001B[90m 22. \u001B[39m\u001B[1m\u001B[94mtidyselect:::chr_as_locations(\u001B[39m\u001B[22mx, vars, call = call\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "\nRestarting R session...\n\n"
    ]
}